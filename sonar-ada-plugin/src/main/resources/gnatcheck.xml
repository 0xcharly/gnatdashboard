<?xml version="1.0" ?>
<rules>
  <!--Genrated from gnatcheck -hx-->
  <rule>
    <key>
      Discriminated_Records
    </key>
    <configkey>
      Discriminated_Records
    </configkey>
    <name>
      discriminated records
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Non_Short_Circuit_Operators
    </key>
    <configkey>
      Non_Short_Circuit_Operators
    </configkey>
    <name>
      use of predefined AND and OR for boolean types
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Enumeration_Ranges_In_CASE_Statements
    </key>
    <configkey>
      Enumeration_Ranges_In_CASE_Statements
    </configkey>
    <name>
      enumeration ranges as choices in case statements
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Unconditional_Exits
    </key>
    <configkey>
      Unconditional_Exits
    </configkey>
    <name>
      Exit statement with no condition
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Forbidden_Attributes:GNAT
    </key>
    <configkey>
      Forbidden_Attributes:GNAT
    </configkey>
    <name>
      detect all GNAT attributes except explicitly disabled
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Library_Level_Subprograms
    </key>
    <configkey>
      Library_Level_Subprograms
    </configkey>
    <name>
      library level subprograms
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Casing:Type
    </key>
    <configkey>
      Identifier_Casing:Type
    </configkey>
    <name>
      type name casing
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Positional_Generic_Parameters
    </key>
    <configkey>
      Positional_Generic_Parameters
    </configkey>
    <name>
      positional generic associations
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Implicit_IN_Mode_Parameters
    </key>
    <configkey>
      Implicit_IN_Mode_Parameters
    </configkey>
    <name>
      implicit IN mode in parameter specifications
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Too_Many_Parents
    </key>
    <configkey>
      Too_Many_Parents
    </configkey>
    <name>
      type/object has too many parents
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Exits_From_Conditional_Loops
    </key>
    <configkey>
      Exits_From_Conditional_Loops
    </configkey>
    <name>
      exit from conditional loops
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Abstract_Type_Declarations
    </key>
    <configkey>
      Abstract_Type_Declarations
    </configkey>
    <name>
      abstract types
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Non_Visible_Exceptions
    </key>
    <configkey>
      Non_Visible_Exceptions
    </configkey>
    <name>
      potential propagations of non-visible exceptions
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      USE_PACKAGE_Clauses
    </key>
    <configkey>
      USE_PACKAGE_Clauses
    </configkey>
    <name>
      use clause for packages
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Non_Tagged_Derived_Types
    </key>
    <configkey>
      Non_Tagged_Derived_Types
    </configkey>
    <name>
      derived types that are not type extensions
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Forbidden_Attributes:ALL
    </key>
    <configkey>
      Forbidden_Attributes:ALL
    </configkey>
    <name>
      detect all attributes except explicitly disabled
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Casing:Enum
    </key>
    <configkey>
      Identifier_Casing:Enum
    </configkey>
    <name>
      enumeration literal casing
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      EXIT_Statements_With_No_Loop_Name
    </key>
    <configkey>
      EXIT_Statements_With_No_Loop_Name
    </configkey>
    <name>
      exit statements with no loop name
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Controlled_Type_Declarations
    </key>
    <configkey>
      Controlled_Type_Declarations
    </configkey>
    <name>
      controlled types
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      OTHERS_In_CASE_Statements
    </key>
    <configkey>
      OTHERS_In_CASE_Statements
    </configkey>
    <name>
      OTHERS choices in case statements
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Slices
    </key>
    <configkey>
      Slices
    </configkey>
    <name>
      slices
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Prefixes:Subprogram_Access
    </key>
    <configkey>
      Identifier_Prefixes:Subprogram_Access
    </configkey>
    <name>
      prefix for access-to-subprogram type names (empty string disables check)
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Unassigned_OUT_Parameters
    </key>
    <configkey>
      Unassigned_OUT_Parameters
    </configkey>
    <name>
      OUT parameters do not get values in procedure bodies
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Generics_In_Subprograms
    </key>
    <configkey>
      Generics_In_Subprograms
    </configkey>
    <name>
      definitions of generic units in  subprogram bodies
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Multiple_Entries_In_Protected_Definitions
    </key>
    <configkey>
      Multiple_Entries_In_Protected_Definitions
    </configkey>
    <name>
      protected definitions with more than one entry
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      No_Scalar_Storage_Order_Specified
    </key>
    <configkey>
      No_Scalar_Storage_Order_Specified
    </configkey>
    <name>
      a record/record extension type has record representation clause but no Scalar_Storage_Order attribute clause
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Expanded_Loop_Exit_Names
    </key>
    <configkey>
      Expanded_Loop_Exit_Names
    </configkey>
    <name>
      expanded loop names in exit statements
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Visible_Components
    </key>
    <configkey>
      Visible_Components
    </configkey>
    <name>
      Types with publicly accessible components
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Deeply_Nested_Generics
    </key>
    <configkey>
      Deeply_Nested_Generics
    </configkey>
    <name>
      deeply nested generic declarations
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Positional_Components
    </key>
    <configkey>
      Positional_Components
    </configkey>
    <name>
      positional components associations in aggregates
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Function_Style_Procedures
    </key>
    <configkey>
      Function_Style_Procedures
    </configkey>
    <name>
      procedures looking like functions
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Metrics_Cyclomatic_Complexity
    </key>
    <configkey>
      Metrics_Cyclomatic_Complexity
    </configkey>
    <name>
      (metrics) high cyclomatic complexity
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Metrics_LSLOC
    </key>
    <configkey>
      Metrics_LSLOC
    </configkey>
    <name>
      (metrics) high LSLOC value
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Boolean_Relational_Operators
    </key>
    <configkey>
      Boolean_Relational_Operators
    </configkey>
    <name>
      comparisons of Boolean values
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Positional_Parameters
    </key>
    <configkey>
      Positional_Parameters
    </configkey>
    <name>
      positional associations in subprogram and entry calls
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Casing:Constant
    </key>
    <configkey>
      Identifier_Casing:Constant
    </configkey>
    <name>
      constant name casing
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Recursive_Subprograms
    </key>
    <configkey>
      Recursive_Subprograms
    </configkey>
    <name>
      recursion (call graph cycles)
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Casing:Exception
    </key>
    <configkey>
      Identifier_Casing:Exception
    </configkey>
    <name>
      exception name casing
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      OTHERS_In_Exception_Handlers
    </key>
    <configkey>
      OTHERS_In_Exception_Handlers
    </configkey>
    <name>
      OTHERS choices in exception handlers
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Separate_Numeric_Error_Handlers
    </key>
    <configkey>
      Separate_Numeric_Error_Handlers
    </configkey>
    <name>
      Numeric_Error and Constraint error are not handled together
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      GOTO_Statements
    </key>
    <configkey>
      GOTO_Statements
    </configkey>
    <name>
      goto statements
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Prefixes:Derived
    </key>
    <configkey>
      Identifier_Prefixes:Derived
    </configkey>
    <name>
      prefix for derived type names (empty string disables check)
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Complex_Inlined_Subprograms
    </key>
    <configkey>
      Complex_Inlined_Subprograms
    </configkey>
    <name>
      complex inlined subprograms
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Numeric_Literals
    </key>
    <configkey>
      Numeric_Literals
    </configkey>
    <name>
      Checks that no numeric literal is greater than the entered number, or set ALL to check all numeric literals
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Prefixes:Type
    </key>
    <configkey>
      Identifier_Prefixes:Type
    </configkey>
    <name>
      prefix for type names (empty string disables check)
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Overly_Nested_Control_Structures
    </key>
    <configkey>
      Overly_Nested_Control_Structures
    </configkey>
    <name>
      deep nesting level of control structures
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Suffixes:Renaming_Suffix
    </key>
    <configkey>
      Identifier_Suffixes:Renaming_Suffix
    </configkey>
    <name>
      suffix for package renaming names (empty string disables check)
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Universal_Ranges
    </key>
    <configkey>
      Universal_Ranges
    </configkey>
    <name>
      ranges with universal integer bounds
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Default_Parameters
    </key>
    <configkey>
      Default_Parameters
    </configkey>
    <name>
      declarations of default subprogram parameters
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Predefined_Numeric_Types
    </key>
    <configkey>
      Predefined_Numeric_Types
    </configkey>
    <name>
      explicit references to predefined numeric subtypes
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Improper_Returns
    </key>
    <configkey>
      Improper_Returns
    </configkey>
    <name>
      improper use of return statements
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Suffixes:Type_Suffix
    </key>
    <configkey>
      Identifier_Suffixes:Type_Suffix
    </configkey>
    <name>
      suffix for type names (empty string disables check)
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Anonymous_Arrays
    </key>
    <configkey>
      Anonymous_Arrays
    </configkey>
    <name>
      anonymous array types
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Parameters_Out_Of_Order
    </key>
    <configkey>
      Parameters_Out_Of_Order
    </configkey>
    <name>
      formal parameters ordering
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Deeply_Nested_Inlining
    </key>
    <configkey>
      Deeply_Nested_Inlining
    </configkey>
    <name>
      deeply nested inlining (global check)
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Explicit_Full_Discrete_Ranges
    </key>
    <configkey>
      Explicit_Full_Discrete_Ranges
    </configkey>
    <name>
      explicit discrete ranges
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Local_Packages
    </key>
    <configkey>
      Local_Packages
    </configkey>
    <name>
      local packages
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Prefixes:Class_Access
    </key>
    <configkey>
      Identifier_Prefixes:Class_Access
    </configkey>
    <name>
      prefix for class access type names (empty string disables check)
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      OTHERS_In_Aggregates
    </key>
    <configkey>
      OTHERS_In_Aggregates
    </configkey>
    <name>
      OTHERS choices in aggregates
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Suffixes:Default
    </key>
    <configkey>
      Identifier_Suffixes:Default
    </configkey>
    <name>
      identifiers use standard suffixes
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Forbidden_Attributes
    </key>
    <configkey>
      Forbidden_Attributes
    </configkey>
    <name>
      do not detect specified attributes (use ',' as separator)
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Name_Clashes
    </key>
    <configkey>
      Name_Clashes
    </configkey>
    <name>
      restrictions on name space (specify dictionary of forbidden names) 
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Uncommented_BEGIN_In_Package_Bodies
    </key>
    <configkey>
      Uncommented_BEGIN_In_Package_Bodies
    </configkey>
    <name>
      BEGIN keywords in package bodies non-marked with comment with package name
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Suffixes:Access_Suffix
    </key>
    <configkey>
      Identifier_Suffixes:Access_Suffix
    </configkey>
    <name>
      suffix for access type names  (empty string disables check)
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Improperly_Located_Instantiations
    </key>
    <configkey>
      Improperly_Located_Instantiations
    </configkey>
    <name>
      instantiations that can cause problems
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Non_Qualified_Aggregates
    </key>
    <configkey>
      Non_Qualified_Aggregates
    </configkey>
    <name>
      non-qualified aggregates
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Positional_Actuals_For_Defaulted_Parameters
    </key>
    <configkey>
      Positional_Actuals_For_Defaulted_Parameters
    </configkey>
    <name>
      positional actuals for defaulted parameters
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Overloaded_Operators
    </key>
    <configkey>
      Overloaded_Operators
    </configkey>
    <name>
      operator overloading
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Blocks
    </key>
    <configkey>
      Blocks
    </configkey>
    <name>
      block statements
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Exceptions_As_Control_Flow
    </key>
    <configkey>
      Exceptions_As_Control_Flow
    </configkey>
    <name>
      exceptions for control flow
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Misnamed_Controlling_Parameters
    </key>
    <configkey>
      Misnamed_Controlling_Parameters
    </configkey>
    <name>
      Badly formatted profile of a primitive operation
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Prefixes:Constant
    </key>
    <configkey>
      Identifier_Prefixes:Constant
    </configkey>
    <name>
      prefix for constant names (empty string disables check)
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Annotated_Comments
    </key>
    <configkey>
      Annotated_Comments
    </configkey>
    <name>
      detect specified annotations (use ',' as separator)
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Suffixes:Constant_Suffix
    </key>
    <configkey>
      Identifier_Suffixes:Constant_Suffix
    </configkey>
    <name>
      suffix for constant names (empty string disables check)
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Metrics_Essential_Complexity
    </key>
    <configkey>
      Metrics_Essential_Complexity
    </configkey>
    <name>
      (metrics) high essential complexity
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Implicit_SMALL_For_Fixed_Point_Types
    </key>
    <configkey>
      Implicit_SMALL_For_Fixed_Point_Types
    </configkey>
    <name>
      fixed point type declarations with no 'Small clause
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Deep_Inheritance_Hierarchies
    </key>
    <configkey>
      Deep_Inheritance_Hierarchies
    </configkey>
    <name>
      derivation tree is too deep
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Prefixes:Access
    </key>
    <configkey>
      Identifier_Prefixes:Access
    </configkey>
    <name>
      prefix for access type names (empty string disables check)
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Numeric_Literals:Statements_Only
    </key>
    <configkey>
      Numeric_Literals:Statements_Only
    </configkey>
    <name>
      check numeric literals on statements only
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Float_Equality_Checks
    </key>
    <configkey>
      Float_Equality_Checks
    </configkey>
    <name>
      equality for float values
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Prefixes:Exclusive
    </key>
    <configkey>
      Identifier_Prefixes:Exclusive
    </configkey>
    <name>
      strong check mode
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Casing:Exclude
    </key>
    <configkey>
      Identifier_Casing:Exclude
    </configkey>
    <name>
      dictionary of casing exceptions
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Prefixes:Concurrent
    </key>
    <configkey>
      Identifier_Prefixes:Concurrent
    </configkey>
    <name>
      prefix for task and protected type names (empty string disables check)
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Anonymous_Subtypes
    </key>
    <configkey>
      Anonymous_Subtypes
    </configkey>
    <name>
      anonymous subtypes
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Unconstrained_Array_Returns
    </key>
    <configkey>
      Unconstrained_Array_Returns
    </configkey>
    <name>
      functions returning unconstrained arrays
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Direct_Calls_To_Primitives
    </key>
    <configkey>
      Direct_Calls_To_Primitives
    </configkey>
    <name>
      non-dispatching calls to primitives
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Positional_Actuals_For_Defaulted_Generic_Parameters
    </key>
    <configkey>
      Positional_Actuals_For_Defaulted_Generic_Parameters
    </configkey>
    <name>
      positional generic actuals for defaulted generic parameters
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Unnamed_Blocks_And_Loops
    </key>
    <configkey>
      Unnamed_Blocks_And_Loops
    </configkey>
    <name>
      compound statements naming
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Casing:Others
    </key>
    <configkey>
      Identifier_Casing:Others
    </configkey>
    <name>
      other name casing
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Raising_Predefined_Exceptions
    </key>
    <configkey>
      Raising_Predefined_Exceptions
    </configkey>
    <name>
      explicit raise of predefined exceptions
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Forbidden_Pragmas:ALL
    </key>
    <configkey>
      Forbidden_Pragmas:ALL
    </configkey>
    <name>
      detect all pragmas except explicitly disabled
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Forbidden_Pragmas
    </key>
    <configkey>
      Forbidden_Pragmas
    </configkey>
    <name>
      do not detect specified pragmas (use ',' as separator)
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Volatile_Objects_Without_Address_Clauses
    </key>
    <configkey>
      Volatile_Objects_Without_Address_Clauses
    </configkey>
    <name>
      volatile objects with no address clause
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Outer_Loop_Exits
    </key>
    <configkey>
      Outer_Loop_Exits
    </configkey>
    <name>
      exiting more than one loop at once
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Declarations_In_Blocks
    </key>
    <configkey>
      Declarations_In_Blocks
    </configkey>
    <name>
      block statements with local declarations
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Forbidden_Pragmas:GNAT
    </key>
    <configkey>
      Forbidden_Pragmas:GNAT
    </configkey>
    <name>
      detect all GNAT pragmas except explicitly disabled
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Prefixes:Enum
    </key>
    <configkey>
      Identifier_Prefixes:Enum
    </configkey>
    <name>
      prefix for enumeration literals (empty string disables check)
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Raising_External_Exceptions
    </key>
    <configkey>
      Raising_External_Exceptions
    </configkey>
    <name>
      visibility of exceptions raised by routines declared in library package
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Non_SPARK_Attributes
    </key>
    <configkey>
      Non_SPARK_Attributes
    </configkey>
    <name>
      attributes that are not from the SPARK subset
    </name>
    <description>
      No description
    </description>
  </rule>
  <rule>
    <key>
      Identifier_Prefixes:Exception
    </key>
    <configkey>
      Identifier_Prefixes:Exception
    </configkey>
    <name>
      prefix for exception names (empty string disables check)
    </name>
    <description>
      No description
    </description>
  </rule>
</rules>
