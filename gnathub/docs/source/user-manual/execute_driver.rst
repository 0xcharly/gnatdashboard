.. include:: ../defines.hrst
.. highlight:: console

How to execute the |Driver| driver
==================================

Getting started
---------------

Execute |Driver| as you would other |GNAT| tool.  In most cases, you will
provide a |GNAT| project file (:file:`.gpr`)::

    $ gnathub -P my_project.gpr

This executes each |Driver| plug-in for the project, collects the results
of each tool, and stores those results in its local |SQLite| database.

|SQLite| is a software library implementing a self-contained, serverless,
zero-configuration, transactional SQL database engine. This makes it a
perfect fit for storing and organizing the results of the various analysis
and making them available to a wide range of code quality management
platforms.


Project file attributes
-----------------------

The |Driver| driver expects a number of attributes, some required and some
optional, to be set in the project file.

General attributes
^^^^^^^^^^^^^^^^^^

:command:`Local_Repository`
"""""""""""""""""""""""""""

Path to a directory containing custom plug-ins to add to the execution queue of
|Driver|. This is a supplementary list of plug-ins, with means it will extend
the initial plug-ins list which is either computed from the :command:`[system]`
repository, or the :command:`[global]` repository.

The complete list of repositories can be found in :func:`GNAThub.repositories`.

:command:`Plugins`
""""""""""""""""""

List of the names of plug-ins to load and execute for this project. |GNAThub|
ignores this attribute if you specify the :command:`--plugins` switch on the
command line. You can tailor this list by specifying the :command:`Plugins_Off`
attributes.

:command:`Plugins_Off`
""""""""""""""""""""""

List of plug-ins names to remove from the execution queue if present. Use this
to disable one or more plug-ins in the context of a specific project. This
filter is applied after the computation of the complete plug-ins list.

|SonarQube|-specific attributes
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

:command:`Project_Name`
"""""""""""""""""""""""

Name of the project. This is used by the :file:`sonar-config` plug-in to
override the default project name provided by the |GNAT| project file.

:command:`Project_Version`
""""""""""""""""""""""""""

Version of the project. This is used by the :file:`sonar-config` plug-in to
override the default project version set by the plug-in.

:command:`Project_Key`
""""""""""""""""""""""

Unique key of the project. This is used by the :file:`sonar-config` plug-in
to override the default project key generated by the plug-in (from the
project's name). This is a required attribute that enabled |SonarQube| to
discriminate between projects in its database.

:command:`Source_Encoding`
""""""""""""""""""""""""""

Encoding to use to read files from this project. This is used by the
:file:`sonar-config` plug-in to override the default encoding set
(:command:`UTF-8`) and forward this value to |SonarQube| (which takes care
of reading and indexing all source files).

|Driver|'s core plug-ins
------------------------

|Product|'s driver comes with a set of core plug-ins, available in the
:command:`[system]` repository, allowing quick integration with a software
development team's workflow.

The following tools are currently supported by the |Driver|'s core plugins:

+--------------+-----------------+--------------------------------------------+
| **Tool**     | **Plugin name** | **Description**                            |
+--------------+-----------------+--------------------------------------------+
| |GNATmetric| | gnatmetric      | Execute |GNATmetric| and parse the results |
+--------------+-----------------+--------------------------------------------+
| |GNATcheck|  | gnatcheck       | Execute |GNATcheck| and parse the results  |
+--------------+-----------------+--------------------------------------------+
| |GNATprove|  | gnatprove       | Execute |GNATprove| and parse the results  |
+--------------+-----------------+--------------------------------------------+
| |CodePeer|   | codepeer        | Execute |CodePeer| and                     |
|              |                 | :program:`msg-reader` and parse the        |
|              |                 | results                                    |
+--------------+-----------------+--------------------------------------------+
| |Gcov|       | gcov            | Parse the :file:`.gcov` files              |
+--------------+-----------------+--------------------------------------------+

|Driver|'s additonal plug-ins
-----------------------------

An additional :command:`[global]` repository is available for the user to store
plugins.  |Driver| searches this directory looking for additional plugins
to load. This directory is never be overridden by an update, making it a
good place to store custom plug-ins.


|Driver|'s command line
-----------------------

You can specify switches on the command line to tune each execution of the
driver. Please use :command:`gnathub --help` to see the full list of
supported switches.  Each switch has an argument, specified below.

:command:`--plugins`
^^^^^^^^^^^^^^^^^^^^

A comma-separated list of plug-in names. This list is used as the initial
execution queue of the driver, replacing the list of plug-ins computed from
the project attribute :command:`Plugins`. However, the project attribute
:command:`Plugins_Off` still applies to that list and removes any explicitly
disabled plug-ins.

:command:`--exec`
^^^^^^^^^^^^^^^^^

A Python file. Instead of its default behavior, when you specify
:command:`--exec`, |Driver| retains any previous database (instead of
clearing it) and executes the specified Python file. This allows for
post-processing, possibly on the local database, using the exposed Python
API.

:command:`--jobs`
^^^^^^^^^^^^^^^^^

Maximum number of processes to be executed concurrently.  Similar to the
:command:`-j` switch passed to :program:`make`. :command:`0` is a special
value meaning "as many processes as possible". The default is :command:`1`.
